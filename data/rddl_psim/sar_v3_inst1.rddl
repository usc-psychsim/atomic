domain sar_ps3 {
	requirements = { 
		reward-deterministic,
		concurrent
	};	
	types {
  		agent : object;
 	  	loc    : object;
	}; 	
	pvariables { 	
		pLoc(agent, loc) : { state-fluent, bool, default = false };
		move(agent, loc): { action-fluent, bool, default = false};
		nbr(loc, loc)  : { non-fluent, bool, default = false };
	};
	cpfs {		
		pLoc'(?p, ?lc) = 
			if (move(?p, ?lc))
				then KronDelta(true)
			else if (forall_{?lc2 : loc} ~move(?p, ?lc2))				
			    	then pLoc(?p, ?lc)
			else  KronDelta(false);
	};
		
	reward = sum_{?p: agent, ?lc: loc}[ pLoc(?p, ?lc) ] ;


	state-action-constraints {
		// Precondition: let's say we should not set a cell if it is already alive
		forall_{?p : agent, ?lc : loc} move(?p, ?lc) =>  exists_{?lc2 : loc} [pLoc(?p, ?lc2) ^ nbr(?lc2, ?lc) ] ;
	};

}

non-fluents sar_ps3_inst1{
	domain = sar_ps3; 
	objects { 
		agent : {p1, p2};
		loc : {tkt_1,tkt_2,tkt_3,tkt_4,tkt_5,tkt_6,kco_1,kco_2,kco_3,kco_4,kco_5,kco_6,kco_7,kco_8,kco_9,lib_1,lib_2,lib_3,lib_4,lib_5,lib_6,lib_7,lib_8,lib_9,lib_10,oba,so,ccw,mcw,ccn,hcr_1,hcr_2,hcr_3,hcr_4,hcr_5,hcr_6,crc,acr,jc_1,jc_2,rrc,cf_1,cf_2,cf_3,cf_4,cf_5,cf_6,cf_7,cf_8,cf_9,cf_10,cf_11,cf_12,cf_13,cf_14,cf_15,r101_1,r101_2,r101_3,r101_4,mb_1,mb_2,mb_3,mb_4,mb_5,mkcr,r102_1,r102_2,r102_3,r102_4,wb_1,wb_2,wb_3,wb_4,wb_5,cce,r103_1,r103_2,r103_3,r103_4,r103_5,r104_1,r104_2,r104_3,r104_4,r104_5,r105_1,r105_2,r105_3,r105_4,r105_5,r106_1,r106_2,r106_3,r106_4,r106_5,r106_6,r107_1,r107_2,r107_3,r107_4,r108_1,r108_2,r108_3,r108_4,r109_1,r109_2,r109_3,r109_4,r109_5,r110_1,r110_2,r110_3,r110_4,r110_5,llcn,ds_1,ds_2,ca,llc_1,llc_2,llc_3,llc_4,llc_5,llc_6,llc_7,llc_8,llc_9,llc_10,llc_11,llc_12,llc_13,llc_14,llc_15,llc_16,llc_17,llc_18,llc_19,llc_20,llc_21,llc_22,llc_23,llc_24,llc_25,llc_26,llc_27,llc_28,llc_29,llc_30,llc_31,llc_32,llc_33,llc_34,llc_35,br_1,br_2,br_3,o100_1,o100_2,o101,sga_1,sga_2,sga_3,sga_4,sga_5,sga_6,sga_7,sga_8,sga_9,sga_10,sga_11,sga_12,sga_13,sga_14,sga_15,sga_16,sga_17,sga_18,el_1,el_2,el_3,ew_1,ew_2,sdc_1,sdc_2,sdc_3,sdc_4,sdc_5,mce,buf_1,buf_2,buf_3,buf_4,buf_5,buf_6,buf_7,buf_8,buf_9,buf_10,buf_11,buf_12,buf_13,kit_1,kit_2,kit_3,kit_4,scn_1,scn_2,scn_3,scn_4,srh,srf,srd,srb,srg,sre,src,sra,scw,srl,srk,srj,sri,srp_1,srp_2,sro_1,sro_2,srn_1,srn_2,srm_1,srm_2,scc,srv,srs,sru,srr,srt,srq,sce};
	}; 
	non-fluents {
		nbr(tkt_1, tkt_2) = true;
nbr(tkt_2, tkt_1) = true;
nbr(tkt_2, tkt_3) = true;
nbr(tkt_3, tkt_2) = true;
nbr(tkt_3, tkt_4) = true;
nbr(tkt_4, tkt_3) = true;
nbr(tkt_4, tkt_5) = true;
nbr(tkt_5, tkt_4) = true;
nbr(tkt_5, tkt_6) = true;
nbr(tkt_6, tkt_5) = true;
nbr(kco_1, kco_2) = true;
nbr(kco_2, kco_1) = true;
nbr(kco_2, kco_3) = true;
nbr(kco_3, kco_2) = true;
nbr(kco_3, kco_4) = true;
nbr(kco_4, kco_3) = true;
nbr(kco_3, kco_6) = true;
nbr(kco_6, kco_3) = true;
nbr(kco_4, kco_5) = true;
nbr(kco_5, kco_4) = true;
nbr(kco_6, kco_7) = true;
nbr(kco_7, kco_6) = true;
nbr(kco_7, kco_8) = true;
nbr(kco_8, kco_7) = true;
nbr(kco_8, kco_9) = true;
nbr(kco_9, kco_8) = true;
nbr(lib_1, lib_2) = true;
nbr(lib_2, lib_1) = true;
nbr(lib_1, lib_3) = true;
nbr(lib_3, lib_1) = true;
nbr(lib_2, lib_4) = true;
nbr(lib_4, lib_2) = true;
nbr(lib_2, lib_5) = true;
nbr(lib_5, lib_2) = true;
nbr(lib_2, lib_6) = true;
nbr(lib_6, lib_2) = true;
nbr(lib_2, lib_7) = true;
nbr(lib_7, lib_2) = true;
nbr(lib_2, lib_8) = true;
nbr(lib_8, lib_2) = true;
nbr(lib_2, lib_9) = true;
nbr(lib_9, lib_2) = true;
nbr(lib_2, lib_10) = true;
nbr(lib_10, lib_2) = true;
nbr(lib_3, lib_4) = true;
nbr(lib_4, lib_3) = true;
nbr(lib_3, lib_5) = true;
nbr(lib_5, lib_3) = true;
nbr(lib_3, lib_6) = true;
nbr(lib_6, lib_3) = true;
nbr(lib_3, lib_7) = true;
nbr(lib_7, lib_3) = true;
nbr(lib_3, lib_8) = true;
nbr(lib_8, lib_3) = true;
nbr(lib_3, lib_9) = true;
nbr(lib_9, lib_3) = true;
nbr(lib_3, lib_10) = true;
nbr(lib_10, lib_3) = true;
nbr(hcr_1, hcr_2) = true;
nbr(hcr_2, hcr_1) = true;
nbr(hcr_1, hcr_3) = true;
nbr(hcr_3, hcr_1) = true;
nbr(hcr_2, hcr_5) = true;
nbr(hcr_5, hcr_2) = true;
nbr(hcr_2, hcr_6) = true;
nbr(hcr_6, hcr_2) = true;
nbr(hcr_3, hcr_4) = true;
nbr(hcr_4, hcr_3) = true;
nbr(hcr_4, hcr_5) = true;
nbr(hcr_5, hcr_4) = true;
nbr(hcr_5, hcr_6) = true;
nbr(hcr_6, hcr_5) = true;
nbr(jc_1, jc_2) = true;
nbr(jc_2, jc_1) = true;
nbr(cf_1, cf_2) = true;
nbr(cf_2, cf_1) = true;
nbr(cf_1, cf_3) = true;
nbr(cf_3, cf_1) = true;
nbr(cf_1, cf_4) = true;
nbr(cf_4, cf_1) = true;
nbr(cf_1, cf_5) = true;
nbr(cf_5, cf_1) = true;
nbr(cf_1, cf_6) = true;
nbr(cf_6, cf_1) = true;
nbr(cf_1, cf_7) = true;
nbr(cf_7, cf_1) = true;
nbr(cf_1, cf_8) = true;
nbr(cf_8, cf_1) = true;
nbr(cf_2, cf_9) = true;
nbr(cf_9, cf_2) = true;
nbr(cf_2, cf_15) = true;
nbr(cf_15, cf_2) = true;
nbr(cf_8, cf_9) = true;
nbr(cf_9, cf_8) = true;
nbr(cf_8, cf_15) = true;
nbr(cf_15, cf_8) = true;
nbr(cf_10, cf_15) = true;
nbr(cf_15, cf_10) = true;
nbr(cf_11, cf_15) = true;
nbr(cf_15, cf_11) = true;
nbr(cf_12, cf_15) = true;
nbr(cf_15, cf_12) = true;
nbr(cf_13, cf_15) = true;
nbr(cf_15, cf_13) = true;
nbr(cf_14, cf_15) = true;
nbr(cf_15, cf_14) = true;
nbr(r101_1, r101_2) = true;
nbr(r101_2, r101_1) = true;
nbr(r101_1, r101_3) = true;
nbr(r101_3, r101_1) = true;
nbr(r101_2, r101_4) = true;
nbr(r101_4, r101_2) = true;
nbr(mb_1, mb_2) = true;
nbr(mb_2, mb_1) = true;
nbr(mb_1, mb_3) = true;
nbr(mb_3, mb_1) = true;
nbr(mb_1, mb_4) = true;
nbr(mb_4, mb_1) = true;
nbr(mb_2, mb_5) = true;
nbr(mb_5, mb_2) = true;
nbr(r102_1, r102_2) = true;
nbr(r102_2, r102_1) = true;
nbr(r102_2, r102_3) = true;
nbr(r102_3, r102_2) = true;
nbr(r102_3, r102_4) = true;
nbr(r102_4, r102_3) = true;
nbr(wb_1, wb_2) = true;
nbr(wb_2, wb_1) = true;
nbr(wb_1, wb_3) = true;
nbr(wb_3, wb_1) = true;
nbr(wb_1, wb_4) = true;
nbr(wb_4, wb_1) = true;
nbr(wb_4, wb_5) = true;
nbr(wb_5, wb_4) = true;
nbr(r103_1, r103_3) = true;
nbr(r103_3, r103_1) = true;
nbr(r103_2, r103_3) = true;
nbr(r103_3, r103_2) = true;
nbr(r103_2, r103_4) = true;
nbr(r103_4, r103_2) = true;
nbr(r103_4, r103_5) = true;
nbr(r103_5, r103_4) = true;
nbr(r104_1, r104_3) = true;
nbr(r104_3, r104_1) = true;
nbr(r104_2, r104_3) = true;
nbr(r104_3, r104_2) = true;
nbr(r104_2, r104_4) = true;
nbr(r104_4, r104_2) = true;
nbr(r104_4, r104_5) = true;
nbr(r104_5, r104_4) = true;
nbr(r105_1, r105_2) = true;
nbr(r105_2, r105_1) = true;
nbr(r105_1, r105_3) = true;
nbr(r105_3, r105_1) = true;
nbr(r105_3, r105_4) = true;
nbr(r105_4, r105_3) = true;
nbr(r105_4, r105_5) = true;
nbr(r105_5, r105_4) = true;
nbr(r106_1, r106_5) = true;
nbr(r106_5, r106_1) = true;
nbr(r106_2, r106_3) = true;
nbr(r106_3, r106_2) = true;
nbr(r106_2, r106_4) = true;
nbr(r106_4, r106_2) = true;
nbr(r106_3, r106_5) = true;
nbr(r106_5, r106_3) = true;
nbr(r106_4, r106_6) = true;
nbr(r106_6, r106_4) = true;
nbr(r107_1, r107_2) = true;
nbr(r107_2, r107_1) = true;
nbr(r107_1, r107_3) = true;
nbr(r107_3, r107_1) = true;
nbr(r107_3, r107_4) = true;
nbr(r107_4, r107_3) = true;
nbr(r108_1, r108_2) = true;
nbr(r108_2, r108_1) = true;
nbr(r108_1, r108_3) = true;
nbr(r108_3, r108_1) = true;
nbr(r108_3, r108_4) = true;
nbr(r108_4, r108_3) = true;
nbr(r109_1, r109_2) = true;
nbr(r109_2, r109_1) = true;
nbr(r109_1, r109_3) = true;
nbr(r109_3, r109_1) = true;
nbr(r109_3, r109_4) = true;
nbr(r109_4, r109_3) = true;
nbr(r109_4, r109_5) = true;
nbr(r109_5, r109_4) = true;
nbr(r110_1, r110_3) = true;
nbr(r110_3, r110_1) = true;
nbr(r110_2, r110_3) = true;
nbr(r110_3, r110_2) = true;
nbr(r110_2, r110_4) = true;
nbr(r110_4, r110_2) = true;
nbr(r110_4, r110_5) = true;
nbr(r110_5, r110_4) = true;
nbr(ds_1, ds_2) = true;
nbr(ds_2, ds_1) = true;
nbr(llc_1, llc_6) = true;
nbr(llc_6, llc_1) = true;
nbr(llc_2, llc_7) = true;
nbr(llc_7, llc_2) = true;
nbr(llc_3, llc_11) = true;
nbr(llc_11, llc_3) = true;
nbr(llc_3, llc_12) = true;
nbr(llc_12, llc_3) = true;
nbr(llc_4, llc_5) = true;
nbr(llc_5, llc_4) = true;
nbr(llc_5, llc_10) = true;
nbr(llc_10, llc_5) = true;
nbr(llc_5, llc_19) = true;
nbr(llc_19, llc_5) = true;
nbr(llc_5, llc_21) = true;
nbr(llc_21, llc_5) = true;
nbr(llc_5, llc_27) = true;
nbr(llc_27, llc_5) = true;
nbr(llc_5, llc_32) = true;
nbr(llc_32, llc_5) = true;
nbr(llc_6, llc_9) = true;
nbr(llc_9, llc_6) = true;
nbr(llc_7, llc_9) = true;
nbr(llc_9, llc_7) = true;
nbr(llc_8, llc_10) = true;
nbr(llc_10, llc_8) = true;
nbr(llc_9, llc_11) = true;
nbr(llc_11, llc_9) = true;
nbr(llc_9, llc_13) = true;
nbr(llc_13, llc_9) = true;
nbr(llc_11, llc_13) = true;
nbr(llc_13, llc_11) = true;
nbr(llc_11, llc_17) = true;
nbr(llc_17, llc_11) = true;
nbr(llc_13, llc_17) = true;
nbr(llc_17, llc_13) = true;
nbr(llc_13, llc_18) = true;
nbr(llc_18, llc_13) = true;
nbr(llc_14, llc_18) = true;
nbr(llc_18, llc_14) = true;
nbr(llc_15, llc_17) = true;
nbr(llc_17, llc_15) = true;
nbr(llc_16, llc_19) = true;
nbr(llc_19, llc_16) = true;
nbr(llc_17, llc_18) = true;
nbr(llc_18, llc_17) = true;
nbr(llc_18, llc_20) = true;
nbr(llc_20, llc_18) = true;
nbr(llc_20, llc_21) = true;
nbr(llc_21, llc_20) = true;
nbr(llc_21, llc_22) = true;
nbr(llc_22, llc_21) = true;
nbr(llc_22, llc_26) = true;
nbr(llc_26, llc_22) = true;
nbr(llc_22, llc_28) = true;
nbr(llc_28, llc_22) = true;
nbr(llc_23, llc_28) = true;
nbr(llc_28, llc_23) = true;
nbr(llc_24, llc_26) = true;
nbr(llc_26, llc_24) = true;
nbr(llc_25, llc_27) = true;
nbr(llc_27, llc_25) = true;
nbr(llc_28, llc_29) = true;
nbr(llc_29, llc_28) = true;
nbr(llc_29, llc_33) = true;
nbr(llc_33, llc_29) = true;
nbr(llc_29, llc_34) = true;
nbr(llc_34, llc_29) = true;
nbr(llc_30, llc_34) = true;
nbr(llc_34, llc_30) = true;
nbr(llc_31, llc_33) = true;
nbr(llc_33, llc_31) = true;
nbr(llc_34, llc_35) = true;
nbr(llc_35, llc_34) = true;
nbr(br_1, br_2) = true;
nbr(br_2, br_1) = true;
nbr(br_2, br_3) = true;
nbr(br_3, br_2) = true;
nbr(o100_1, o100_2) = true;
nbr(o100_2, o100_1) = true;
nbr(sga_1, sga_2) = true;
nbr(sga_2, sga_1) = true;
nbr(sga_2, sga_3) = true;
nbr(sga_3, sga_2) = true;
nbr(sga_3, sga_4) = true;
nbr(sga_4, sga_3) = true;
nbr(sga_4, sga_6) = true;
nbr(sga_6, sga_4) = true;
nbr(sga_5, sga_7) = true;
nbr(sga_7, sga_5) = true;
nbr(sga_6, sga_8) = true;
nbr(sga_8, sga_6) = true;
nbr(sga_7, sga_9) = true;
nbr(sga_9, sga_7) = true;
nbr(sga_8, sga_10) = true;
nbr(sga_10, sga_8) = true;
nbr(sga_9, sga_10) = true;
nbr(sga_10, sga_9) = true;
nbr(sga_10, sga_11) = true;
nbr(sga_11, sga_10) = true;
nbr(sga_10, sga_12) = true;
nbr(sga_12, sga_10) = true;
nbr(sga_11, sga_13) = true;
nbr(sga_13, sga_11) = true;
nbr(sga_12, sga_14) = true;
nbr(sga_14, sga_12) = true;
nbr(sga_13, sga_15) = true;
nbr(sga_15, sga_13) = true;
nbr(sga_14, sga_16) = true;
nbr(sga_16, sga_14) = true;
nbr(sga_15, sga_17) = true;
nbr(sga_17, sga_15) = true;
nbr(sga_16, sga_18) = true;
nbr(sga_18, sga_16) = true;
nbr(el_1, el_2) = true;
nbr(el_2, el_1) = true;
nbr(el_2, el_3) = true;
nbr(el_3, el_2) = true;
nbr(ew_1, ew_2) = true;
nbr(ew_2, ew_1) = true;
nbr(sdc_1, sdc_5) = true;
nbr(sdc_5, sdc_1) = true;
nbr(sdc_2, sdc_3) = true;
nbr(sdc_3, sdc_2) = true;
nbr(sdc_2, sdc_4) = true;
nbr(sdc_4, sdc_2) = true;
nbr(sdc_4, sdc_5) = true;
nbr(sdc_5, sdc_4) = true;
nbr(buf_1, buf_2) = true;
nbr(buf_2, buf_1) = true;
nbr(buf_1, buf_3) = true;
nbr(buf_3, buf_1) = true;
nbr(buf_2, buf_4) = true;
nbr(buf_4, buf_2) = true;
nbr(buf_3, buf_5) = true;
nbr(buf_5, buf_3) = true;
nbr(buf_3, buf_6) = true;
nbr(buf_6, buf_3) = true;
nbr(buf_4, buf_6) = true;
nbr(buf_6, buf_4) = true;
nbr(buf_4, buf_8) = true;
nbr(buf_8, buf_4) = true;
nbr(buf_4, buf_10) = true;
nbr(buf_10, buf_4) = true;
nbr(buf_4, buf_12) = true;
nbr(buf_12, buf_4) = true;
nbr(buf_5, buf_6) = true;
nbr(buf_6, buf_5) = true;
nbr(buf_6, buf_7) = true;
nbr(buf_7, buf_6) = true;
nbr(buf_7, buf_8) = true;
nbr(buf_8, buf_7) = true;
nbr(buf_8, buf_9) = true;
nbr(buf_9, buf_8) = true;
nbr(buf_9, buf_10) = true;
nbr(buf_10, buf_9) = true;
nbr(buf_9, buf_11) = true;
nbr(buf_11, buf_9) = true;
nbr(buf_11, buf_12) = true;
nbr(buf_12, buf_11) = true;
nbr(buf_12, buf_13) = true;
nbr(buf_13, buf_12) = true;
nbr(kit_1, kit_2) = true;
nbr(kit_2, kit_1) = true;
nbr(kit_2, kit_3) = true;
nbr(kit_3, kit_2) = true;
nbr(kit_3, kit_4) = true;
nbr(kit_4, kit_3) = true;
nbr(scn_1, scn_2) = true;
nbr(scn_2, scn_1) = true;
nbr(scn_2, scn_3) = true;
nbr(scn_3, scn_2) = true;
nbr(scn_2, scn_4) = true;
nbr(scn_4, scn_2) = true;
nbr(srp_1, srp_2) = true;
nbr(srp_2, srp_1) = true;
nbr(sro_1, sro_2) = true;
nbr(sro_2, sro_1) = true;
nbr(srn_1, srn_2) = true;
nbr(srn_2, srn_1) = true;
nbr(srm_1, srm_2) = true;
nbr(srm_2, srm_1) = true;

 	}; 
 }
instance sar_ps3_inst1 { 
	domain = sar_ps3; 
 	non-fluents = sar_ps3_inst1;
	init-state { 
		pLoc(p1,tkt_1) = true;
		pLoc(p2,tkt_1) = true;
	};
	max-nondef-actions = 2;
	horizon = 20;
	discount = 1.0;
} 

